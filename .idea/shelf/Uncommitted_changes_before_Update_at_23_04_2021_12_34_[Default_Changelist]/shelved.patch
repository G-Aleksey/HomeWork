Index: src/HW_2/HW_5_6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/HW_5_6.java b/src/HW_2/HW_5_6.java
new file mode 100644
--- /dev/null	(date 1619170329525)
+++ b/src/HW_2/HW_5_6.java	(date 1619170329525)
@@ -0,0 +1,19 @@
+package HW_2;
+
+public class HW_5_6 {
+    public static void main(String[] args) {
+        int[][] array = {{1, 2, 3, 4, 5}, {6, 7, 8, 9}, {-1, -2, -3, -4}, {-5, -6}};
+        int max = Integer.MIN_VALUE;
+        for (int i = 0; i < array.length; i++) {
+            for (int j = 0; j < array[i].length; j++) {
+                if (max<array[i][j]){
+                    max=array[i][j];
+                }
+               // sum = sum + array[i][j];
+
+            }
+
+        }
+        System.out.println(max);
+    }
+}
Index: src/HW_2/HW_6_3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/HW_6_3.java b/src/HW_2/HW_6_3.java
new file mode 100644
--- /dev/null	(date 1619170329531)
+++ b/src/HW_2/HW_6_3.java	(date 1619170329531)
@@ -0,0 +1,18 @@
+package HW_2;
+
+public class HW_6_3 {
+    public static void main(String[] args) {
+        String s = "Посмотрите как Рите нравится ритм";
+       String s2 = s.toLowerCase();
+       int count = 0;
+        for (int i = 0; i < s.length(); i++) {
+            if ( s2.charAt(i) == 'р' && s2.charAt(i+1) == 'и' && s2.charAt(i+2) == 'т') {
+                count++;
+            }
+        }
+        System.out.println(count);
+    }
+
+}
+
+
Index: src/HW_2/HW_5_4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/HW_5_4.java b/src/HW_2/HW_5_4.java
new file mode 100644
--- /dev/null	(date 1619170329502)
+++ b/src/HW_2/HW_5_4.java	(date 1619170329502)
@@ -0,0 +1,27 @@
+package HW_2;
+
+public class HW_5_4 {
+    public static void main(String[] args) {
+        int[][] array = {{1, 2, 3, 4, 5}, {6, 7, 8, 9}, {-1, -2, -3, -4}, {-5, -6}};
+        int sum = 0;
+        double len = 0;
+        for (int i = 0; i < array.length; i++) {
+            len += array[i].length;
+            for (int j = 0; j < array[i].length; j++) {
+
+                sum = sum + array[i][j];
+            }
+        }
+        System.out.println(len);
+        System.out.println(sum);
+       System.out.println(sum / len);
+
+
+//       int[] qa = {1, 2, 3, 4, 5, 6};
+//        for (int i = 0; i < qa.length; i++) {
+//
+//        }
+//        System.out.println(Arrays.toString(qa));
+    }
+
+}
Index: src/HW_2/HW_5_5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/HW_5_5.java b/src/HW_2/HW_5_5.java
new file mode 100644
--- /dev/null	(date 1619170329514)
+++ b/src/HW_2/HW_5_5.java	(date 1619170329514)
@@ -0,0 +1,20 @@
+package HW_2;
+
+public class HW_5_5 {
+    public static void main(String[] args) {
+        int[][] array = {{1, 2, 3, 4, 5}, {6, 7, 8, 9}, {-1, -2, -3, -4}, {-5, -6}};
+        int sum = 0;
+        for (int i = 0; i < array.length; i++) {
+            for (int j = 0; j < array[i].length; j++) {
+
+                 sum = sum + array[i][j];
+
+            }
+
+        }
+        System.out.println(sum);
+    }
+}
+
+
+
Index: src/QA_java/QA_Codewars.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QA_java/QA_Codewars.java b/src/QA_java/QA_Codewars.java
new file mode 100644
--- /dev/null	(date 1619170393748)
+++ b/src/QA_java/QA_Codewars.java	(date 1619170393748)
@@ -0,0 +1,39 @@
+package QA_java;
+import java.util.Arrays;
+
+public class QA_Codewars {
+
+    public static String twoSort(String[] s) {
+       // System.out.println(Arrays.toString(s));
+        Arrays.sort(s);
+        String [] firstWordArray = s[0].split("");
+        String result = "";
+        for (int i = 0; i < firstWordArray.length; i++) {
+            result += firstWordArray[i];
+            if (i < firstWordArray.length -1) {
+                result += "***";
+            }
+
+        }
+      //  System.out.println(Arrays.toString(s));
+        return result;
+
+        //public class SortAndStar {
+        //
+        //    public static String twoSort(String[] s) {
+        //        java.util.Arrays.sort(s);
+        //                                                       краткое решение
+        //        return String.join("***",s[0].split(""));
+        //    }
+        //}
+
+
+    }
+
+    public static void main(String[] args) {
+
+        System.out.println(twoSort(new String[] {"bitcoin", "take", "over", "the", "world", "maybe", "who", "knows", "perhaps"}));
+            // "b***i***t***c***o***i***n"
+    }
+}
+
Index: src/QA_java/QA_Codwars_Squash.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QA_java/QA_Codwars_Squash.java b/src/QA_java/QA_Codwars_Squash.java
new file mode 100644
--- /dev/null	(date 1619170393759)
+++ b/src/QA_java/QA_Codwars_Squash.java	(date 1619170393759)
@@ -0,0 +1,23 @@
+package QA_java;
+
+//public class QA_Codwars_Squash {
+
+
+//    public static int findLongest(final String str) {
+//        String[] spl = str.split(" ");
+//        int longest = 0;
+//        for (int i = 0; i > spl.length; i++) {
+//            if (spl[i].length() > longest) {
+//                longest = spl[i].length();
+//            }
+//        }
+//        return longest;
+
+//    public static int rentalCarCost(int d) {
+//        // Your solution here
+//        int total =50 *d;
+//
+//    }
+//}
+
+
Index: src/HW_2/HW_6_4_EXtra.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/HW_6_4_EXtra.java b/src/HW_2/HW_6_4_EXtra.java
new file mode 100644
--- /dev/null	(date 1619170329508)
+++ b/src/HW_2/HW_6_4_EXtra.java	(date 1619170329508)
@@ -0,0 +1,19 @@
+package HW_2;
+
+public class HW_6_4_EXtra {
+    public static void main(String[] args) {
+        String[][] array = {{"Привет", "всем", "кто"},
+                            {"изучает", "язык", "программирования"},
+                            {"java"}};
+        int count = 0;
+        for (int i = 0; i <array.length ; i++) {
+            for (int j = 0; j < array[i].length; j++) {
+                if (array[i][j].indexOf("е") == -1) {
+                    ++count;
+                }
+            }
+
+        } System.out.println(count);
+    }
+}
+
Index: src/HW_2/QA_6_1_String.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HW_2/QA_6_1_String.java b/src/HW_2/QA_6_1_String.java
new file mode 100644
--- /dev/null	(date 1619170329519)
+++ b/src/HW_2/QA_6_1_String.java	(date 1619170329519)
@@ -0,0 +1,25 @@
+package HW_2;
+
+public class QA_6_1_String {
+    public static void main(String[] args) {
+        String[] catsName = new String[8];
+
+       catsName [0] = "Мурзик";
+       catsName [1] = "BArsik";
+        catsName [2] = "Sonya";
+        catsName [3] = "Asay";
+        catsName [4] = "Rugik";
+        catsName [5] = "Bonay";
+        catsName [6] = "Cotic";
+        catsName [7] = "Ramik";
+
+//        for (int i = 0; i < catsName.length; i++) {
+//            System.out.println(catsName[i]);
+//        }
+        for (int boxNumber = 0; boxNumber <= 7; boxNumber ++) {
+            System.out.println(boxNumber);
+            
+        }
+
+    }
+}
Index: src/QA_java/QA_5_Array.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QA_java/QA_5_Array.java b/src/QA_java/QA_5_Array.java
new file mode 100644
--- /dev/null	(date 1619170393754)
+++ b/src/QA_java/QA_5_Array.java	(date 1619170393754)
@@ -0,0 +1,21 @@
+package QA_java;
+
+import java.sql.Array;
+import java.util.Arrays;
+
+public class QA_5_Array {
+    public static void main(String[] args) {
+//        String a = "abc";
+//        String b = "ab";
+//        b += 'c';
+//        System.out.println(a );
+//        System.out.println(b);
+//        //System.out.println(a == b);            false
+//        System.out.println(a.equals(b));
+
+        int[] x = {10, 20};
+        int[] c = {10, 20};
+        System.out.println(Arrays.equals(x, c));
+
+    }
+}
Index: src/QA_java/QA_6_2_Array_loop_string.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/QA_java/QA_6_2_Array_loop_string.java b/src/QA_java/QA_6_2_Array_loop_string.java
new file mode 100644
--- /dev/null	(date 1619170393743)
+++ b/src/QA_java/QA_6_2_Array_loop_string.java	(date 1619170393743)
@@ -0,0 +1,42 @@
+package QA_java;
+
+import java.util.Arrays;
+
+public interface QA_6_2_Array_loop_string {
+    public static void main(String[] args) {
+
+//        int[] lavel = {1, 2, 4, 5, 5, 6};
+//        //             1  2  3  4  5  6
+//
+//        for (int i = 0; i < lavel.length; i++) {
+//            if (lavel[i] != i + lavel[0]) {
+//                System.out.println(lavel[i]);
+//            }
+//       }
+
+//        int[] a = new int[] {1, 2, 3, 4, 5, 6};
+//        int[] b = {7, 8, 9, 10};
+//        int [][] c = {a, b};
+//        System.out.println(Arrays.toString(a));
+//        System.out.println(Arrays.toString(b));
+//        System.out.println(Arrays.deepToString(c));
+
+//        int[][] lol = {{1, 2, 3, 4, 5, 6}, {8, 9, 10}};
+//            int max = Integer.MIN_VALUE;
+//        for (int i = 0; i < lol.length; i++) {
+//            for (int j = 0; j < lol[i].length; j++) {
+//                if (lol[i][j] > max) {
+//                    max = lol[i][j];
+//                }
+//            }
+//        }
+//            System.out.println(max);
+
+
+
+
+
+
+
+    }
+}
